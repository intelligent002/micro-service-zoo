name: Selective Docker Builds with Timestamps

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: shell
          filters: |
            zoo-alert-manager: ["zoo-alert-manager/**"]
            zoo-grafana: ["zoo-grafana/**"]
            zoo-jaeger: ["zoo-jaeger/**"]
            zoo-loki: ["zoo-loki/**"]
            zoo-mysqld-exporter: ["zoo-mysqld-exporter/**"]
            zoo-node-exporter: ["zoo-node-exporter/**"]
            zoo-php-laravel: ["zoo-php-laravel/**"]
            zoo-php-laravel-http2fpm: ["zoo-php-laravel-http2fpm/**"]
            zoo-prometheus: ["zoo-prometheus/**"]
            zoo-promtail: ["zoo-promtail/**"]
            zoo-python-fastapi: ["zoo-python-fastapi/**"]
            zoo-python-flask: ["zoo-python-flask/**"]
            zoo-redis: ["zoo-redis/**"]
            zoo-router: ["zoo-router/**"]
            zoo-typescript-angular: ["zoo-typescript-angular/**"]
            zoo-typescript-react: ["zoo-typescript-react/**"]

  build:
    needs: changes
    if: >-
      ${{ 
        needs.changes.outputs.matrix
          && needs.changes.outputs.matrix != '[]'
      }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.changes.outputs.matrix) }}
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_OWNER: intelligent002

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug repo owner
        run: echo "Repository Owner is intelligent002"

      - name: Set Timestamp Tag
        id: tag
        run: echo "tag=$(date '+%Y-%m-%d---%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: intelligent002
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Set IMAGE_NAME
        run: echo "IMAGE_NAME=${{ matrix.service }}" >> $GITHUB_ENV

      - name: Build Docker Images with Timestamp and Latest Tags
        run: |
          docker build -t ghcr.io/intelligent002/zoo/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }} ./${{ matrix.service }}
          docker tag ghcr.io/intelligent002/zoo/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }} \
                     ghcr.io/intelligent002/zoo/${{ env.IMAGE_NAME }}:latest 
          docker push ghcr.io/intelligent002/zoo/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
          docker push ghcr.io/intelligent002/zoo/${{ env.IMAGE_NAME }}:latest
          
