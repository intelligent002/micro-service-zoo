name: Selective Docker Builds with Timestamps

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: shell
          filters: |
            zoo-alert-manager: ["zoo-alert-manager/**"]
            zoo-grafana: ["zoo-grafana/**"]
            zoo-jaeger: ["zoo-jaeger/**"]
            zoo-loki: ["zoo-loki/**"]
            zoo-mysql: ["zoo-mysql/**"]
            zoo-mysqld-exporter: ["zoo-mysqld-exporter/**"]
            zoo-node-exporter: ["zoo-node-exporter/**"]
            zoo-php-laravel: ["zoo-php-laravel/**"]
            zoo-php-laravel-http2fpm: ["zoo-php-laravel-http2fpm/**"]
            zoo-prometheus: ["zoo-prometheus/**"]
            zoo-promtail: ["zoo-promtail/**"]
            zoo-python-fastapi: ["zoo-python-fastapi/**"]
            zoo-python-flask: ["zoo-python-flask/**"]
            zoo-redis: ["zoo-redis/**"]
            zoo-router: ["zoo-router/**"]
            zoo-typescript-angular: ["zoo-typescript-angular/**"]
            zoo-typescript-react: ["zoo-typescript-react/**"]

  build:
    needs: changes
    if: ${{ needs.changes.outputs.matrix != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.changes.outputs.matrix) }}
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_OWNER: ${{ github.actor }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Timestamp Tag
        id: tag
        run: echo "tag=$(date '+%Y-%m-%d---%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ matrix.service }}:${{ steps.tag.outputs.tag }}
