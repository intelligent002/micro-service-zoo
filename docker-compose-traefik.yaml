services:
    # Traefik reverse proxy
    zoo-traefik:
        image: traefik:v2.10
        container_name: zoo-traefik
        command:
          - "--api.insecure=true"  # Enable Traefik dashboard at :8080 (disable in production)
          - "--providers.docker=true"
          - "--entrypoints.web.address=:80"
          - "--entrypoints.websecure.address=:443"
          #- "--certificatesresolvers.myresolver.acme.httpchallenge=false"
          #- "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
          #- "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
          #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ports:
          - "80:80"         # HTTP
          - "443:443"       # HTTPS
          - "8080:8080"     # Traefik dashboard
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "./letsencrypt:/letsencrypt"
        networks:
          - zoo

    # MySQL Service
    zoo-mysql:
        image: mysql:8.0
        container_name: zoo-mysql
        restart: unless-stopped
        ports:
            - "3307:3307"
        environment:
            - MYSQL_DATABASE=zoo-db
            - MYSQL_HOSTNAME=localhost
            - MYSQL_PASSWORD=zoo-password
            - MYSQL_ROOT_PASSWORD=root-password
            - MYSQL_TCP_PORT=3307
            - MYSQL_USER=zoo-user
        labels:
            - "traefik.enable=false"
        volumes:
            - mysql-data:/var/lib/mysql
            - ./zoo-mysql/mysql-health.sh:/mysql-health.sh
        entrypoint: ["/bin/bash", "-c", "chmod +x /mysql-health.sh && docker-entrypoint.sh mysqld"]
        healthcheck:
            test: [ "CMD", "/mysql-health.sh" ]
            interval: 60s
            retries: 5
            start_period: 20s
            timeout: 10s
        networks:
            - zoo

    # Backend written in Python/Flask (python:3.12.5-alpine3.20)
    zoo-python-flask:
        image: ghcr.io/intelligent002/zoo/zoo-python-flask:latest
        container_name: zoo-python-flask
        restart: unless-stopped
        environment:
            - APP_PORT=8101
            - DB_DATABASE=zoo-db
            - DB_HOSTNAME=zoo-mysql
            - DB_PASSWORD=zoo-password
            - DB_PORT=3307
            - DB_USERNAME=zoo-user
            - DEBUG_MODE=False
            - ENVIRONMENT=PRODUCTION
            - LOG_LEVEL=DEBUG
            - SERVICE_NAME=zoo-python-flask
        labels:
            - "traefik.enable=false"
            - "traefik.http.services.zoo-python-flask.loadbalancer.server.port=8101"
            - "traefik.http.routers.zoo-python-flask.rule=Host(`zoo-python-flask.docker.r7g.org`)"
            - "traefik.http.routers.zoo-python-flask.entrypoints=web"
            #- "traefik.http.routers.zoo-python-flask.middlewares=redirect-to-https"
            #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
            - "traefik.http.routers.zoo-python-flask-secure.rule=Host(`zoo-python-flask.docker.r7g.org`)"
            - "traefik.http.routers.zoo-python-flask-secure.entrypoints=websecure"
            #- "traefik.http.routers.zoo-python-flask-secure.tls.certresolver=myresolver"
        healthcheck:
            test: ["CMD-SHELL", "response=$$(curl -s http://localhost:8101/graphql/liveness | jq -r '.status'); \
                    if [ \"$$response\" != \"OK\" ]; then echo \"Status is not OK\" && exit 1; else echo \"Status is OK\" && exit 0; fi"]
            interval: 60s
            retries: 3
            start_period: 5s
            timeout: 10s
        depends_on:
            - zoo-mysql
        networks:
            - zoo

    # Backend written in Python/FastAPI (python:3.12.5-alpine3.20)
    zoo-python-fastapi:
        image: ghcr.io/intelligent002/zoo/zoo-python-fastapi:latest
        container_name: zoo-python-fastapi
        restart: unless-stopped
        environment:
            - APP_PORT=8101
            - DB_DATABASE=zoo-db
            - DB_HOSTNAME=zoo-mysql
            - DB_PASSWORD=zoo-password
            - DB_PORT=3307
            - DB_USERNAME=zoo-user
            - DEBUG_MODE=False
            - ENVIRONMENT=docker-compose
            - LOG_LEVEL=DEBUG
            - SERVICE_NAME=zoo-python-fastapi
        labels:
            - "traefik.http.services.zoo-python-fastapi.loadbalancer.server.port=8101"
            - "traefik.http.routers.zoo-python-fastapi.rule=Host(`zoo-python-fastapi.docker.r7g.org`)"
            - "traefik.http.routers.zoo-python-fastapi.entrypoints=web"
            #- "traefik.http.routers.zoo-python-fastapi.middlewares=redirect-to-https"
            #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
            - "traefik.http.routers.zoo-python-fastapi-secure.rule=Host(`zoo-python-fastapi.docker.r7g.org`)"
            - "traefik.http.routers.zoo-python-fastapi-secure.entrypoints=websecure"
            #- "traefik.http.routers.zoo-python-fastapi-secure.tls.certresolver=myresolver"
        healthcheck:
            test: ["CMD-SHELL", "response=$$(curl -s http://localhost:8101/graphql/liveness | jq -r '.status'); \
                    if [ \"$$response\" != \"OK\" ]; then echo \"Status is not OK\" && exit 1; else echo \"Status is OK\" && exit 0; fi"]
            interval: 60s
            retries: 3
            start_period: 5s
            timeout: 10s
        depends_on:
            - zoo-mysql
        networks:
            - zoo

    # Frontend written in TypeScript/React (node:18-alpine3.20)
    zoo-typescript-react:
        image: ghcr.io/intelligent002/zoo/zoo-typescript-react:latest
        container_name: zoo-typescript-react
        restart: unless-stopped
        environment:
            - ENVIRONMENT=docker-compose
            - LOG_LEVEL=debug
            - NGINX_PORT=8102
            - REACT_APP_ROUTER_PORT=8120
            - SERVICE_NAME=zoo-typescript-react
        labels:
            - "traefik.http.services.zoo-typescript-react.loadbalancer.server.port=8102"
            - "traefik.http.routers.zoo-typescript-react.rule=Host(`zoo-typescript-react.docker.r7g.org`)"
            - "traefik.http.routers.zoo-typescript-react.entrypoints=web"
            #- "traefik.http.routers.zoo-typescript-react.middlewares=redirect-to-https"
            #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
            - "traefik.http.routers.zoo-typescript-react-secure.rule=Host(`zoo-typescript-react.docker.r7g.org`)"
            - "traefik.http.routers.zoo-typescript-react-secure.entrypoints=websecure"
            #- "traefik.http.routers.zoo-typescript-react-secure.tls.certresolver=myresolver"
        healthcheck:
            test: ["CMD-SHELL", "response=$$(curl -s http://localhost:8102/liveness | jq -r '.status'); \
                    if [ \"$$response\" != \"OK\" ]; then echo \"Status is not OK\" && exit 1; else echo \"Status is OK\" && exit 0; fi"]
            interval: 60s
            retries: 3
            start_period: 5s
            timeout: 10s
        depends_on:
            - zoo-python-flask
        networks:
            - zoo

    # Backend written in PHP/Laravel (php:8.2-fpm)
    zoo-php-laravel:
        image: ghcr.io/intelligent002/zoo/zoo-php-laravel:latest
        container_name: zoo-php-laravel
        restart: unless-stopped
        environment:
            - APP_PORT=8103
            - APP_URL=http://localhost:8003/
            - DB_DATABASE=zoo-db
            - DB_HOSTNAME=zoo-mysql
            - DB_PASSWORD=zoo-password
            - DB_PORT=3307
            - DB_USERNAME=zoo-user
            - ENVIRONMENT=docker-compose
            - LOG_LEVEL=debug
            - SERVICE_NAME=zoo-php-laravel
        labels:
            - "traefik.enable=false"
            - "traefik.http.services.zoo-php-laravel.loadbalancer.server.port=8103"
            - "traefik.http.routers.zoo-php-laravel.rule=Host(`zoo-php-laravel.docker.r7g.org`)"
            - "traefik.http.routers.zoo-php-laravel.entrypoints=web"
            #- "traefik.http.routers.zoo-php-laravel.middlewares=redirect-to-https"
            #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
            - "traefik.http.routers.zoo-php-laravel-secure.rule=Host(`zoo-php-laravel.docker.r7g.org`)"
            - "traefik.http.routers.zoo-php-laravel-secure.entrypoints=websecure"
            #- "traefik.http.routers.zoo-php-laravel-secure.tls.certresolver=myresolver"
        healthcheck:
            test: ["CMD-SHELL", "response=$$(REQUEST_URI=/rest/liveness SCRIPT_FILENAME=/var/www/html/public/index.php REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:8103 | sed -n '/^{/,$$p' | jq -r '.status'); \
                   if [ \"$$response\" != \"OK\" ]; then echo \"Status is not OK\" && exit 1; else echo \"Status is OK\" && exit 0; fi"]
            interval: 60s
            retries: 3
            start_period: 5s
            timeout: 10s
        depends_on:
            - zoo-mysql
        networks:
            - zoo
            
    # NGINX Service (Reverse Proxy + HTTP to PHP-FPM converter + Static File Serving)
    zoo-php-laravel-http2fpm:
        image: ghcr.io/intelligent002/zoo/zoo-php-laravel-http2fpm:latest
        container_name: zoo-php-laravel-http2fpm
        restart: unless-stopped
        environment:
            - ENVIRONMENT=docker-compose
            - LOG_LEVEL=debug
            - NGINX_PORT=8104
            - SERVICE_NAME=zoo-php-laravel-http2fpm
            - ZOO_PHP_LARAVEL_PORT=8103
        labels:
            - "traefik.http.services.zoo-php-laravel-http2fpm.loadbalancer.server.port=8104"
            - "traefik.http.routers.zoo-php-laravel-http2fpm.rule=Host(`zoo-php-laravel-http2fpm.docker.r7g.org`)"
            - "traefik.http.routers.zoo-php-laravel-http2fpm.entrypoints=web"
            #- "traefik.http.routers.zoo-php-laravel-http2fpm.middlewares=redirect-to-https"
            #- "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
            - "traefik.http.routers.zoo-php-laravel-http2fpm-secure.rule=Host(`zoo-php-laravel-http2fpm.docker.r7g.org`)"
            - "traefik.http.routers.zoo-php-laravel-http2fpm-secure.entrypoints=websecure"
            #- "traefik.http.routers.zoo-php-laravel-http2fpm-secure.tls.certresolver=myresolver"
        volumes:
            - ./zoo-php-laravel-http2fpm/probe/:/var/www/html/http2fpm/
        healthcheck:
            # Test availabiltiy of nginx service, listening & serving - via inline curl request parsed by JQ
            test: ["CMD-SHELL", "response=$$(curl -s http://localhost:8104/http2fpm/liveness | jq -r '.status'); \
                    if [ \"$$response\" != \"OK\" ]; then echo \"Status is not OK\" && exit 1; else echo \"Status is OK\" && exit 0; fi"]
            interval: 60s
            retries: 3
            start_period: 5s
            timeout: 10s
        depends_on:
            - zoo-php-laravel
        networks:
            - zoo            

# Named volumes for persistent data storage
volumes:
    mysql-data:

# Shared network between the containers
networks:
    zoo:
        driver: bridge
