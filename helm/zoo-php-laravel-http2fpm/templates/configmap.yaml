apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "zoo-common.fullname" . }}
data:
  nginx.conf.template: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        # access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        #tcp_nopush     on;
        keepalive_timeout  65;
        gzip  on;
        log_format json_combined escape=json '{'
                '"timestamp":"$time_iso8601",'
                '"host":"$hostname",'
                '"environment":"${ENVIRONMENT}",'
                '"service_name":"${SERVICE_NAME}",'
                '"request_id":"$request_id",'
                '"trace_id":"$request_id",'
                '"remote_user":"$remote_user",'
                '"body_bytes_sent":"$body_bytes_sent",'
                '"http_user_agent":"$http_user_agent",'
                '"referer":"$http_referer",'
                '"extra":{'
                    '"ip_address":"$remote_addr",'
                    '"http_x_forwarded_for":"$http_x_forwarded_for",'
                    '"http_method":"$request_method",'
                    '"request":"$request",'
                    '"status_code":"$status",'
                    '"response_time_ms":"$request_time"'
                '}'
            '}';
        access_log /var/log/nginx/access.log json_combined;
        include /etc/nginx/conf.d/*.conf;
    }
  default.conf.template: |
    server {
      listen ${NGINX_PORT} default_server;
      server_name localhost;
      # Default files to serve when a directory is requested
      index index.php index.html index.htm;
      # Root directory for serving files
      root /var/www/html;
      # Liveness probe and main entry point for the application
      location / {
          try_files $uri $uri/ /index.php?$query_string;
      }
      # PHP file handling
      location ~ \.php$ {
          fastcgi_pass zoo-php-laravel:${ZOO_PHP_LARAVEL_PORT};
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root/public$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
      }
      # Deny access to hidden files (e.g., .env)
      location ~ /\. {
          deny all;
      }
      # Deny access to sensitive directories (e.g., storage, vendor)
      location ~* /(storage|vendor) {
          deny all;
      }
    }
  starter.sh: |
    #!/bin/sh
    # Set a default ports if env vars are not provided
    : "${NGINX_PORT:=8004}"
    : "${ZOO_PHP_LARAVEL_PORT:=8003}"
    : "${SERVICE_NAME:=service}"
    : "${ENVIRONMENT:=undefined}"
    # Logging configuration of the ports
    echo "Using NGINX_PORT: $NGINX_PORT"
    echo "Using ZOO_PHP_LARAVEL_PORT: $ZOO_PHP_LARAVEL_PORT"
    echo "Using SERVICE_NAME: $SERVICE_NAME"
    echo "Using ENVIRONMENT: $ENVIRONMENT"
    # Replace placeholder with the environment variable or default value
    envsubst '\
    $ZOO_PHP_LARAVEL_PORT \
    $NGINX_PORT \
    $SERVICE_NAME \
    $ENVIRONMENT \
    ' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf
    # Replace placeholder with the environment variable or default value
    envsubst '\
    $ZOO_PHP_LARAVEL_PORT \
    $NGINX_PORT \
    $SERVICE_NAME \
    $ENVIRONMENT \
    ' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf
    # Debugging substitutions
    # cat /etc/nginx/conf.d/default.conf
    # cat /etc/nginx/nginx.conf
    # Start NGINX
    nginx -g 'daemon off;'
