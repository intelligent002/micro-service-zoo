# Define upstream backends for User GUI, User API, Admin GUI, and Admin API

upstream zoo-python-flask {
    server zoo-python-fastapi:${ZOO_PYTHON_FASTAPI_PORT};
}

upstream zoo-php-laravel-http2fpm {
    server zoo-php-laravel-http2fpm:${ZOO_PHP_LARAVEL_HTTP2FPM_PORT};
}

upstream zoo-typescript-react {
    server zoo-typescript-react:${ZOO_TYPESCRIPT_REACT_PORT};
}

server {
    listen ${NGINX_PORT} default_server;

    server_name localhost;
    
    # Generate a trace_id manually
    set_by_lua_block $trace_id {
        local uuid = require 'resty.uuid';
        return uuid.generate();
    }

    # Serve the static files from /var/www/html when accessing /router/ prefix
    location ^~ /router/ {
        root /var/www/html;
    }
    
    # Zone per User API service
    location ^~ /graphql/ {
        # which is a Python-Flask GraphQL app
        proxy_pass http://zoo-python-flask;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Pass both request_id and trace_id to the upstream
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Trace-ID $trace_id;
    }

    # Zone per Admin API service
    location ^~ /rest/ {
     	# which is PHP-Laravel REST app, behind another Nginx which behaves as a translator from HTTP2FPM
        proxy_pass http://zoo-php-laravel-http2fpm;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Pass both request_id and trace_id to the upstream
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Trace-ID $trace_id;
    }

    # Zone per User GUI service
    location ^~ / {
     	# which is TypeScript-React app
        proxy_pass http://zoo-typescript-react;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Pass both request_id and trace_id to the upstream
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Trace-ID $trace_id;
    }
}
