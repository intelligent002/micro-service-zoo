services:
    # MySQL Service
    zoo-mysql:
        image: mysql:8.0
        container_name: zoo-mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root_password
            MYSQL_DATABASE: zoo_db
            MYSQL_USER: zoo_user
            MYSQL_PASSWORD: zoo_password
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 30s
            retries: 5
            start_period: 20s
            timeout: 10s
        ports:
            - "3306:3306"
        volumes:
            - mysql-data:/var/lib/mysql
        networks:
            - zoo

    # Private Backend written in PHP/Laravel (php:8.2-fpm-alpine)
    private-back-php-laravel:
        build:
            context: ./private-back-php-laravel # Set build context to the respective folder
            dockerfile: Dockerfile
            args:
                APP_URL: "http://localhost:8003/"
        container_name: private-back-php-laravel
        restart: unless-stopped
        environment:
            - APP_URL=http://localhost:82/
            - DB_HOSTNAME=zoo-mysql
            - DB_PASSWORD=zoo_password
            - DB_DATABASE=zoo_db
            - DB_USERNAME=zoo_user
        healthcheck:
            test: ["CMD-SHELL", "REQUEST_URI=/liveness SCRIPT_FILENAME=/var/www/html/public/index.php REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000 | sed -n '/^{/,$$p' | jq -e '.status == \"OK\"' > /dev/null || exit 1"]
            interval: 30s
            retries: 3
            start_period: 5s
            timeout: 10s
        ports:
            - "9000:9000"
        depends_on:
            - zoo-mysql
        command: /bin/sh -c "php artisan migrate --force && php-fpm"
        networks:
            - zoo

    # Public Backend written in Python/Flask (python:3.12.5-alpine3.20)
    public-back-python-flask:
        build:
            context: ./public-back-python-flask # Set build context to the respective folder
            dockerfile: Dockerfile
        container_name: public-back-python-flask
        restart: unless-stopped
        environment:
            - DB_HOSTNAME=zoo-mysql
            - DB_USERNAME=zoo_user
            - DB_PASSWORD=zoo_password
            - DB_DATABASE=zoo_db
            - DEBUG_MODE=False
            - LOG_LEVEL=DEBUG
        healthcheck:
            test: ["CMD-SHELL", "if [ $(curl -s http://localhost:8001/liveness | jq -r .status) != \"OK\" ]; then exit 1; fi"]
            interval: 30s
            retries: 3
            start_period: 5s
            timeout: 10s
        ports:
            - "8001:8001"
        depends_on:
            - zoo-mysql
        networks:
            - zoo

    # NGINX Service (Reverse Proxy + Caching + Static File Serving)
    zoo-nginx:
        image: nginx:latest
        container_name: zoo-nginx
        restart: unless-stopped
        ports:
            - "82:80"  # Expose NGINX on port 8080
        volumes:
            - ./nginx/some.conf:/etc/nginx/conf.d/default.conf:ro  # Use custom NGINX config
        environment:
            - document_root=/var/www/html/public
        depends_on:
            - public-back-python-flask
            - private-back-php-laravel
            - zoo-mysql
        networks:
            - zoo

# Named volumes for persistent data storage
volumes:
    mysql-data:

# Shared network between the containers
networks:
    zoo:
        driver: bridge
